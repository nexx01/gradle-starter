

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.6.1/samples
 */

ext{
    javaVersion=16
    currentDate=LocalDate.now()
}

println ext.javaVersion
println project.ext.javaVersion
println javaVersion
println project.javaVersion
//println project.projectParam1
println project."projectParam1"
println "---All properties: "
println project.properties
println "---System: "
println System.getProperty("sysExample")


println "configuration phase"
println("gradle id: ${gradle.hashCode()}")
println("root: ${rootProject.hashCode()}, ${project.hashCode()}, ${gradle.rootProject.hashCode()}")

//task - new DefaultTask()
def map = [description: "Hello task",group: "dev" ]
//Project ->[Task1, Task2]
//Action ->[Action1, Action2] -> action.execution (execution phase)
task hello(description: "Hello task",group: "dev", type: DefaultTask ) {
    println "configuration phase. Task hello"
    println("task: ${description}, group: ${group}, action: ${actions.size}")

    doLast{
        println "execution phase, Action 1"
    }

    doFirst {
        println "execution phase, Action 2"
    }

    doLast{
        println "execution phase, Action 3"
    }

    println("task: ${description}, group: ${group}, action: ${actions.size}")
    println("path task $path")


}

task first{
    doLast {
        println("Task 1")
    }
}

task second{
    doLast {
        println("Task 2")
    }
}

task third{
    doLast {
        println("Task 3")
    }
}

task fourth(group: "dmdev"){

    doLast {
        println("Task 4")
    }
}

fourth.dependsOn first
fourth.dependsOn second
fourth.dependsOn third

first.mustRunAfter second
//second.shouldRunAfter first

gradle.taskGraph.whenReady {TaskExecutionGraph graph->
    println("---Gradle")
    graph.allTasks.each{
        println("$it.name")
    }
}

gradle.taskGraph.beforeTask {task->{
    if(task.group == 'dmdev') {
        println("beforeTask callBack $task)")
    }
}}

gradle.taskGraph.afterTask {task->{
    if(task.name == 'first') {
        println("afterTask callBack $task)")
    }
}}

defaultTasks "second"


//gradle.taskGraph.getAllTasks()

//tasks.findByName("hello")

//hello.description = "Hello task"
//hello.group = "dev"
//
////hello/configure Clouser
//hello {
//    println "configuration phase. Task hello"
//    description = "Hello task"
//    group = "dev"
//}

